---
- name: Install and Configure LDAP Server
  hosts: openldap
  gather_facts: false
  become: true

  pre_tasks:
    - name: include vars file
      include_vars: "{{ item }}.yml"
      loop:
        - vars

  tasks:
    - name: Update apt cache
      apt:
        update_cache: yes

    - name: Set slapd configuration
      template: src=slapd-config.seed.j2 dest=/tmp/slapd-config.seed

    - name: Run debconf-set-selections command
      command: debconf-set-selections slapd-config.seed
      args:
        chdir: /tmp

    - name: Install slapd and ldap-utils and required dependencies for phpLDAPadmin packages
      apt:
        name: "{{ item }}"
        state: present
      loop:
        - slapd
        - ldap-utils
        - apache2
        - php
        - php-ldap
        - libapache2-mod-php

    - name: Download phpLDAPadmin source code
      get_url:
        url: "http://ftp.de.debian.org/debian/pool/main/p/phpldapadmin/{{openldap_version}}"
        dest: "/tmp/{{openldap_version}}"

    - name: Install phpLDAPadmin
      apt:
        deb: "/tmp/{{openldap_version}}"

    - name: Add base DN for Groups
      template: src=basedn.ldif.j2 dest=/tmp/basedn.ldif

    - name: Check if base DN already exists
      command: ldapsearch -x -D "cn=admin,dc={{ env }},dc={{ organisation_name }},dc=ca" -w {{ admin_password }} -b "dc={{ env }},dc={{ organisation_name }},dc=ca" "(objectclass=organizationalUnit)" | grep "ou={{ ldap_group_name }}"
      register: base_dn_check
      changed_when: false
      failed_when: false

    - name: Add base DN for users Groups
      command: ldapadd -x -D cn=admin,dc={{ env }},dc={{ organisation_name }},dc=ca -w {{ admin_password }} -f /tmp/basedn.ldif
      when: "ou=users not in base_dn_check.stdout"

    - name: Add Users on Groups
      template: src=users.ldif.j2 dest=/tmp/user.ldif

    - name: Check if user exists
      command: ldapsearch -x -D "cn=admin,dc={{ env }},dc={{ organisation_name }},dc=ca" -w {{ admin_password }} -b "dc={{ env }},dc={{ organisation_name }},dc=ca" "(&(objectClass=inetOrgPerson)(cn={{ username }}))"
      register: user_search_result
      changed_when: false
      failed_when: false

    - name: Add user to the group
      command: ldapadd -x -D "cn=admin,dc={{ env }},dc={{ organisation_name }},dc=ca" -w {{ admin_password }} -f /tmp/user.ldif
      when: user_search_result.stdout.find("uid=hkenfack") == -1
      ignore_errors: true

    - name: Configure phpldapadmin
      template:
        src: config.php.j2
        dest: /etc/phpldapadmin/config.php

    - name: Configure Apache for phpLDAPadmin
      template:
        src: phpldapadmin.conf.j2
        dest: /etc/apache2/conf-available/phpldapadmin.conf

    - name: Set ownership of the file to www-data
      file:
        path: /usr/share/phpldapadmin/
        owner: www-data

    - name: Disable Apache default site
      command: a2dissite 000-default.conf

    - name: Check Apache syntax
      command: apachectl -t

    - name: Run cat command
      command: cat /etc/debian_version
      register: debian_version_output

    - name: Enable the Apache PHP modules
      command: a2enmod php8.2
      when: debian_version_output.stdout == "12.1"

    - name: Enable the Apache PHP modules
      command: a2enmod php7.4
      when: debian_version_output.stdout == "11.7"

    - name: Enable the Apache LDAP modules
      command: a2enmod ldap

    - name: Install ufw firewall
      apt:
        name: ufw
        state: present

    - name: Enable ufw
      ufw:
        state: enabled

    - name: Open LDAP port in ufw
      ufw:
        rule: allow
        port: ldap
        comment: "Allow ldap port"

    - name: Open Apache on firewall
      ufw:
        rule: allow
        port: "80"
        comment: "Allow HTTP and HTTPS traffic"

    - name: Open ssh port
      ufw:
        rule: allow
        port: "22"
        comment: "Allow ssh connexion"

    - name: Restart Apache web server
      service:
        name: apache2
        state: restarted